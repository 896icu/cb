<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.bdqn.mapper.EmployeeMapper">
  <resultMap id="BaseResultMap" type="cn.bdqn.model.Employee">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="phone" jdbcType="CHAR" property="phone" />
    <result column="nickName" jdbcType="VARCHAR" property="nickName" />
    <result column="IDCard" jdbcType="CHAR" property="IDCard" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="level" jdbcType="CHAR" property="level" />
    <result column="superior" jdbcType="INTEGER" property="superior" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, phone, nickName, IDCard, status, level, superior
  </sql>
  <select id="getEmployeeByPage" resultType="cn.bdqn.model.Employee">
      SELECT e.*,r.`nameZH` AS superName FROM employee e,role r
      WHERE r.`id`=e.`level`
      <if test="keywords!=null and keywords!=''">
        and e.name like concat('%',#{keywords},'%')
      </if>
      limit #{start},#{size}
  </select>
  <select id="count" resultType="Long">
    SELECT count(*) FROM employee e,role r
    WHERE r.`id`=e.`level`
    <if test="keywords!=null and keywords!=''">
      and e.`name` like concat('%',#{keywords},'%')
    </if>
  </select>
  <update id="updateStatus">
    update employee set status=1 where id=#{id}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employee
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from employee
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.bdqn.model.Employee">
    insert into employee (name, phone,
      nickName, IDCard, status, 
      level, super)
    values (#{name,jdbcType=VARCHAR}, #{phone,jdbcType=CHAR},
      #{nickName,jdbcType=VARCHAR}, #{IDCard,jdbcType=CHAR}, #{status,jdbcType=CHAR}, 
      #{level,jdbcType=CHAR}, #{superior,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.bdqn.model.Employee">
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="nickName != null">
        nickName,
      </if>
      <if test="IDCard != null">
        IDCard,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="superior != null">
        superior,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=CHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="IDCard != null">
        #{IDCard,jdbcType=CHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=CHAR},
      </if>
      <if test="superior != null">
        #{superior,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.bdqn.model.Employee">
    update employee
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=CHAR},
      </if>
      <if test="nickName != null">
        nickName = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="IDCard != null">
        IDCard = #{IDCard,jdbcType=CHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=CHAR},
      </if>
      <if test="superior != null">
        superior = #{superior,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.bdqn.model.Employee">
    update employee
    set name = #{name,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=CHAR},
      nickName = #{nickName,jdbcType=VARCHAR},
      IDCard = #{IDCard,jdbcType=CHAR},
      status = #{status,jdbcType=CHAR},
      level = #{level,jdbcType=CHAR},
      superior = #{superior,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>