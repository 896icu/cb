<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.bdqn.mapper.BackendUserMapper">
  <resultMap id="BaseResultMap" type="cn.bdqn.model.BackendUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="phone" jdbcType="CHAR" property="phone" />
    <result column="idCard" jdbcType="VARCHAR" property="idCard"/>
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="userFace" jdbcType="VARCHAR" property="userFace" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <collection property="roleName" ofType="cn.bdqn.model.Role">
      <id column="rid" property="id"/>
      <result column="rname" property="name"/>
      <result column="rnamezh" property="nameZH"/>
    </collection>
  </resultMap>
  <sql id="Base_Column_List">
    id, name, phone, address, username, password, userFace, remark
  </sql>
  <select id="selectById" resultMap="BaseResultMap">
     SELECT b.*,r.`id` AS rid,r.`name` AS rname,r.`nameZh` AS rnamezh FROM backenduser b
      INNER JOIN burole bu ON b.`id`=bu.`buId`
      INNER JOIN role r ON r.`id`=bu.`rId`
      WHERE b.`id`=#{id}
  </select>
  <select id="backendUserList" resultMap="BaseResultMap">
    SELECT b.*,r.`id` AS rid,r.`name` AS rname,r.`nameZh` AS rnamezh FROM backenduser b
      INNER JOIN burole bu ON b.`id`=bu.`buId`
      INNER JOIN role r ON r.`id`=bu.`rId`
  </select>
  <select id="count" resultType="Long">
    SELECT count(*) FROM backenduser b
      INNER JOIN burole bu ON b.`id`=bu.`buId`
      INNER JOIN role r ON r.`id`=bu.`rId`
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from backenduser
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.bdqn.model.BackendUser">
    insert into backenduser (id, name, phone, 
      address, username, password, 
      userFace, remark)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{phone,jdbcType=CHAR}, 
      #{address,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{userFace,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.bdqn.model.BackendUser">
    insert into backenduser
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="userFace != null">
        userFace,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=CHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="userFace != null">
        #{userFace,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.bdqn.model.BackendUser">
    update backenduser
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=CHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="userFace != null">
        userFace = #{userFace,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.bdqn.model.BackendUser">
    update backenduser
    set name = #{name,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=CHAR},
      address = #{address,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      userFace = #{userFace,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>