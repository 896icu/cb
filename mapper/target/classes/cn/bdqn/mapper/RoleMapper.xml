<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.bdqn.mapper.RoleMapper">
  <resultMap id="BaseResultMap" type="cn.bdqn.model.Role">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="createDate" jdbcType="TIMESTAMP" property="createDate" />
    <result column="buId" jdbcType="INTEGER" property="buId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="nameZH" jdbcType="VARCHAR" property="nameZH" />
    <result column="status" jdbcType="CHAR" property="status" />
    <association property="backendUser" javaType="cn.bdqn.model.BackendUser">
      <id column="b_id" property="id"/>
      <result column="b_name" property="name"/>
      <result column="b_idCard" property="idCard"/>
      <result column="b_phone" property="phone"/>
    </association>
  </resultMap>
  <sql id="Base_Column_List">
    id, createDate, buId, name, nameZH, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT r.*,b.`name` AS b_name,b.`id` AS b_id,b.`idCard` AS b_idCard,b.`phone` AS b_phone FROM role r
    INNER JOIN backenduser b ON b.`id`=r.`buId`
    where r.id = #{id,jdbcType=INTEGER}
  </select>
  <select id="count" resultType="Long">
    SELECT count(*) FROM role r
    INNER JOIN backenduser b ON b.`id`=r.`buId`
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    SELECT r.*,b.`name` AS b_name,b.`id` AS b_id,b.`idCard` AS b_idCard,b.`phone` AS b_phone FROM role r
    INNER JOIN backenduser b ON b.`id`=r.`buId`
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.bdqn.model.Role" useGeneratedKeys="true" keyProperty="id">
    insert into role (createDate, buId,
      name, nameZH, status)
    values (#{createDate,jdbcType=TIMESTAMP}, #{buId,jdbcType=INTEGER},
      #{name,jdbcType=VARCHAR}, #{nameZH,jdbcType=VARCHAR}, #{status,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.bdqn.model.Role">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createDate != null">
        createDate,
      </if>
      <if test="buId != null">
        buId,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="nameZH != null">
        nameZH,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="buId != null">
        #{buId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="nameZH != null">
        #{nameZH,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.bdqn.model.Role">
    update role
    <set>
      <if test="createDate != null">
        createDate = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="buId != null">
        buId = #{buId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="nameZH != null">
        nameZH = #{nameZH,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.bdqn.model.Role">
    update role
    set createDate = #{createDate,jdbcType=TIMESTAMP},
      buId = #{buId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      nameZH = #{nameZH,jdbcType=VARCHAR},
      status = #{status,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>